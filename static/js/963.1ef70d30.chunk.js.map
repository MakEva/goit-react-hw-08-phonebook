{"version":3,"file":"static/js/963.1ef70d30.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBook/phonebook.module.css?7568","webpack://react-homework-template/./src/components/PhoneBook/ContactForm/ContactForm.module.css?3732","components/PhoneBook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/PhoneBook/ContactList/contact-list.module.css?841a","components/PhoneBook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/PhoneBook/Filter/Filter.module.css?9e6f","redux/selectors.js","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"phonebook_phonebook__0s5Ct\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact_form\":\"ContactForm_contact_form__AizDx\",\"for_label\":\"ContactForm_for_label__cs6PH\",\"for_input\":\"ContactForm_for_input__hR7pV\",\"button\":\"ContactForm_button__skuVu\"};","import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const onAddContact = data => {\n    dispatch(addContact(data));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    const newContact = { name: name.value, number: number.value };\n    onAddContact(newContact);\n    console.log(newContact);\n    e.target.reset();\n  };\n\n  return (\n    <form className={css.contact_form} onSubmit={handleSubmit} action=\"\">\n      <label htmlFor={nameId} className={css.for_label}>\n        Name\n      </label>\n      <input\n        id={nameId}\n        className={css.for_input}\n        type=\"text\"\n        name=\"name\"\n        required\n      />\n      <label htmlFor={numberId} className={css.for_label}>\n        Number\n      </label>\n      <input\n        id={numberId}\n        className={css.for_input}\n        type=\"tel\"\n        name=\"number\"\n        required\n      />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteBtn\":\"contact-list_deleteBtn__mxbt8\",\"list\":\"contact-list_list__NPpk9\",\"elements\":\"contact-list_elements__1nt8i\"};","import css from './contact-list.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\n\nconst ContactList = ({ items }) => {\n  const dispatch = useDispatch();\n\n  if (!items || items.length === 0) {\n    return null;\n  }\n  const elements = items.map(({ id, name, number }) => (\n    <li key={id} className={css.list}>\n      {name}: {number}\n      <button\n        className={css.deleteBtn}\n        onClick={() => dispatch(deleteContact(id))}\n        type=\"button\"\n      >\n        {' '}\n        Delete\n      </button>\n    </li>\n  ));\n  return <ul className={css.elements}>{elements}</ul>;\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__oYAiB\",\"filter_input\":\"Filter_filter_input__wYHtM\"};","export const getAllContacts = store => store.contacts;\n\nexport const getFilter = store => store.filter;\n","import css from './Filter.module.css';\nimport ContactList from '../ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllContacts } from '../../../redux/selectors';\nimport { getFilter } from '../../../redux/selectors';\nimport { setFilter } from '../../../redux/filter/filter-slice';\nimport { fetchContacts } from '../../../redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Filter = () => {\n  const { items, isLoading, error } = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContact = () => {\n    if (!filter) {\n      return items;\n    }\n    const normalisedFilter = filter.toLowerCase();\n    const filteredContact = items.filter(({ name, number }) => {\n      const normalizedName = name.toLowerCase();\n      const normalizedNumber = number.toLowerCase();\n      return (\n        normalizedName.includes(normalisedFilter) ||\n        normalizedNumber.includes(normalisedFilter)\n      );\n    });\n    return filteredContact;\n  };\n\n  const changeFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  const item = getFilteredContact();\n  return (\n    <>\n      <input\n        className={css.filter_input}\n        onChange={changeFilter}\n        name=\"filter\"\n      />\n      {isLoading && <Loader />}\n      {error && <p>Error: {error}</p>}\n      {Boolean(items.length) && <ContactList items={item} />}\n    </>\n  );\n};\n\nexport default Filter;\n","import css from './phonebook.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <div className={css.phonebook}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\nexport default Phonebook;\n"],"names":["dispatch","useDispatch","nameId","nanoid","numberId","_jsxs","className","css","onSubmit","e","preventDefault","data","_e$target$elements","target","elements","name","number","newContact","value","addContact","console","log","reset","action","children","_jsx","htmlFor","id","type","required","_ref","items","length","map","_ref2","onClick","deleteContact","getAllContacts","store","contacts","getFilter","filter","_useSelector","useSelector","isLoading","error","useEffect","fetchContacts","item","normalisedFilter","toLowerCase","normalizedName","normalizedNumber","includes","getFilteredContact","_Fragment","onChange","setFilter","Loader","Boolean","ContactList","ContactForm","Filter"],"sourceRoot":""}